dump_db() {
  dir=${$(pwd):t}
  if [[ "$dir" == 'amoeba' || "$dir" == 'cam' ]]; then
    echo 'in amoeba / cam'
    PGPORT=15432 $PROJECT_PATH/vm/scripts/dump_db.zsh "$@"
  else
    $PROJECT_PATH/vm/scripts/dump_db.zsh "$@"
  fi
}

# sync clipboard between mac and docker {{{
socat_started(){
  lsof -i :"$1" | grep -q socat
}

sync_docker_clipboard(){
  if ! $(socat_started 8377); then
    socat TCP-LISTEN:8377,reuseaddr,fork SYSTEM:"pbcopy" &
  fi
  if ! $(socat_started 8378); then
    socat TCP-LISTEN:8378,reuseaddr,fork EXEC:"pbpaste" &
  fi
}
# }}}

nrw() {
  local folder_path
  local folder_name
  local asuka_path
  [[ $PWD =~ '(.*perv|.*sg|.*nerv|.*ave_ck)'  ]] && folder_path=$match[1]
  [[ $folder_path =~ '.*(perv|sg|nerv|ave_ck)$'  ]] && folder_name=$match[1]
  asuka_path="$folder_path/clojure/projects/asuka"
  cd $asuka_path && NERV_BASE=/${=folder_name} DEV_DARK_MODE=true npm run watch
}

_cop_ruby() {
  local exts=('rb,thor,builder,jbuilder,pryrc')
  local excludes=':(top,exclude)db/schema.rb'
  local extra_options='--display-cop-names'

  if [[ $# -gt 0 ]]; then
    local files=$(eval "noglob git diff $@ --diff-filter=d --name-only -- *.{$exts} $excludes")
  else
    local files=$(eval "noglob git status --porcelain -- *.{$exts} $excludes | sed -e '/^\s\?[DRC] /d' -e 's/^.\{3\}//g'")
  fi

  if [[ -n "$files" ]]; then
    echo $files | xargs bundle exec rubocop `echo $extra_options` --format pacman
  else
    echo 'Nothing to check (rubocop).'
  fi
}

amoeba_test_reset() {
  RAILS_ENV=test bundle exec rake db:drop
  RAILS_ENV=test bundle exec rake db:create
  RAILS_ENV=test bundle exec rake db:schema:load
  RAILS_ENV=test bundle exec rake db:seed
}

start_all_server() {
  tmux splitw -v -p 80 \; selectp -U \; splitw -h -p 66 \; splitw -h -p 50 \;
  tmux send-keys -t 1 C-z 'nrw' Enter
  tmux send-keys -t 2 C-z 'cjn' Enter
  tmux send-keys -t 3 C-z 'bundle exec rake sneakers:run' Enter
  tmux send-keys -t 4 C-z 'rpu' Enter
}
