# shortcut on pointing diff compose file and using lazydocker
echo "Loaded docker version zshrc helper successfully"
ld() {
  project="${1:-$(detect_pwd_project)}"
  case "$project" in
    hq)
      lazydocker -f "/current/hq/compose.yml"
      ;;
    hk|ck|sg|ave_ck)
      lazydocker -f "/current/sites/nerv_by_site_code/$project/compose.yml"
      ;;
    *)
      if [[ -f "/current/sites/$project/compose.yml" ]]; then
        lazydocker -f "/current/sites/$project/compose.yml"
      else
        lazydocker
      fi
      ;;
  esac
}

dc() {
  local action="${1:-}"
  local site="${2:-hk}" # 預設 hk，如果想測 hk 後面都不用打 site code，打 action 就好
  local compose_file=""

  case "$site" in
    hq)
      compose_file="/current/$site/compose.yml"
      ;;
    hk|ck|sg|ave_ck)
      compose_file="/current/sites/nerv_by_site_code/$site/compose.yml"
      ;;
    *)
      echo "unknown code: $site !"
      return 1
      ;;
  esac

  case "$action" in
    up)
      docker compose -f "$compose_file" up -d
      ;;
    down)
      docker compose -f "$compose_file" down
      ;;
    ps)
      docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Status}}" | grep -i "^$site-"
      ;;
    attach)
      local container_name
      container_name=$(docker ps --format "{{.Names}}" | grep -i "nerv_${site}" | head -n1)
      if [[ -n "$container_name" ]]; then
        echo "match container: $container_name"
        docker attach --sig-proxy=false --detach-keys=ctrl-d "$container_name"
      else
        echo "no match nerv_${site} container"
        return 1
      fi
      ;;
    *)
      echo "unknown action: $action !"
      return 1
      ;;
  esac
}

# match $PWD with project name, and remove `nerv_` prefix
detect_pwd_project(){
  pattern="(nerv_hk|nerv_ck|nerv_sg|nerv_ave_ck|amoeba|angel|cam)"
  [[ $PWD =~ $pattern ]] && project=$match[1] && echo ${project#nerv_}
}

# get or setup amoeba site
amoeba_site(){
  docker compose -f /current/sites/amoeba/compose.yml run --rm amoeba bundle exec thor setup:site $1
}

# detect project and pass it to dump_db script. Handle amoeba site as well.
dump_db() {
  project=$(detect_pwd_project)
  case $project in
    hk|ck|sg|ave_ck)
      /current/edit/scripts/dump_db.sh $project $1
      ;;
    amoeba)
      site=$(amoeba_site | awk '{print $4}')
      echo "dump db for $site"
      /current/edit/scripts/dump_db_amoeba.sh $site $1
      ;;
    *)
      echo "invalid!"
      ;;
  esac
}

# shortcut to swap different cache folder for jumping between nerv/amoeba/angel development {{
sc() {
  err='\\033[0;31m'
  hl='\033[0;32m'
  nc='\033[0m'
  # default if /cache is real folder or softlink, if /cache is real folder, should exit now
  # or it may be accidentally clear
  if [ -e /cache ] && [ ! -L /cache ]; then
    echo -e "${err}Error: /cache folder is not a softlink, this script may not working on this condition, now exit!${nc}"
    # exit 1
  else
    [ -L /cache ] && rm /cache;
    case "${1:-default}" in
      default)
        echo -e "${hl}swap to use 'default' cache folder${nc}"
        ln -s /cache-default /cache
        [ -n "$TMUX" ] && tmux set-option -g @cache-name 'cache-default'
        ;;
      amoeba|aba)
        echo "${hl}swap to use 'amoeba' cache folder${nc}"
        ln -s /cache-amoeba /cache
        [ -n "$TMUX" ] && tmux set-option -g @cache-name 'cache-amoeba'
        ;;
      angel)
        echo "${hl}swap to use 'angel' cache folder${nc}"
        ln -s /cache-angel /cache
        [ -n "$TMUX" ] && tmux set-option -g @cache-name 'cache-angel'
        ;;
      *)
        echo "${err}Error: cache '$1' not exists, please try again!${nc}"
        ;;
    esac
  fi
}

# init softlink if not exists
[ ! -e /cache ] && sc
# }}
