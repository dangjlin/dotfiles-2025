#####################
# General
#####################
# `man tmux` could help
# set -g @plugin 'catppuccin/tmux#latest' # See https://github.com/catppuccin/tmux/tags for additional tags

# set -g @catppuccin_status_modules_right "date_time application session"

# https://github.com/catppuccin/tmux/issues/227#issuecomment-2143439132
# set -g @catppuccin_window_current_text "#{window_name}"
# set -g @catppuccin_window_default_text "#{window_name}"

set -g @plugin "nordtheme/tmux"
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

set-option default-terminal "tmux-256color"
set-option -a terminal-overrides ",*256col*:RGB"

set -g prefix `
# set -g prefix2 C-a

# Free the original Ctrl-b prefix keybinding
# START:unbind
unbind C-b
# END:unbind
bind "'" send-prefix
set -g base-index 1

#setting the delay between prefix and command
# START:delay
set -sg escape-time 0
# END:delay

# Easy config reload
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

bind-key : command-prompt

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 800
set display-panes-colour "white"
set display-panes-active-colour "yellow"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

#####################
# Window & Panes
#####################
bind-key q display-panes
bind-key c new-window
bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

bind - split-window -v -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind c new-window -a -c "#{pane_current_path}"
bind ` last-window

bind z resize-pane -Z
bind m resize-pane -Z
bind l last-pane
bind h previous-window

bind ! break-pane -d
# Prompted join-pane
bind-key j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"
# Easily swap a pane (targeted by pane number) with the current pane
bind-key s display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

set-option -g repeat-time 500

# Number windows starting at 1, renumber as windows are added / removed
set-option -g base-index 1
set-option -g renumber-windows on

# hit space to open the tree
bind C-j choose-tree

bind-key C-o rotate-window

# With this enabled you can use <prefix> C-k to delete word after cursor
bind C-k send-keys 'C-k'

set -g window-size smallest
#####################
# Copy Mode
#####################
bind PageUp copy-mode -u
bind PageDown copy-mode

bind v copy-mode
bind p paste-buffer -p


# mouse support - set to on if you want to use the mouse
# START:mouse
set -g mouse on
# END:mouse

# bind-key -T copy-mode-vi v send-keys -X begin-selection ; \
# bind -T copy-mode-vi y send -X copy-selection

# unbind -T copy-mode-vi Enter ; \
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

#####################
# Status Bar
#####################

# Set window notifications
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on
#END:activity
# set the status line's colors
# START:statuscolor
set -g status-fg white
set -g status-bg black
# END:statuscolor

# Status line left side
# START:statusleft
set -g status-left-length 40
set -g status-left "#[fg=green]#S:#[fg=yellow]#I.#[fg=cyan]#P"
# END:statusleft

# Status line right side
# 15% | 28 Nov 18:15
# START: statusright
set -g status-right "#[fg=cyan]%d %b %Y %R"
# END:statusright
set-option -g status-style bg=colour0
set-option -g pane-active-border-style fg=green
set-option -g pane-border-style fg=white

set-option -g status-left '[#S]'
set-option -g status-right "#(date '+%a, %b %d - %I:%M')"

set-option -g status-interval 1
set-window-option -g window-status-current-style fg=magenta

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vi && tmux send-keys 'C-\\') || tmux select-pane -l"
#####################
# SSH
#####################
# set-environment -g SSH_AUTH_SOCK $HOME/.ssh/ssh_auth_sock
# set -g update-environment -r

### END SSH #########

unbind space

bind -T copy-mode-vi y          send -X copy-selection
bind -T copy-mode-vi v          send -X begin-selection
bind -T copy-mode-vi V          send -X rectangle-toggle
bind -T copy-mode-vi C-v        send -X rectangle-toggle
bind -T copy-mode-vi Space      send -X halfpage-down
bind -T copy-mode-vi C-PageUp   send -X page-up
bind -T copy-mode-vi C-PageDown send -X page-down
bind -T copy-mode-vi Home       send -X back-to-indentation
bind -T copy-mode-vi End        send -X end-of-line
bind -T copy-mode-vi I          send -X back-to-indentation
bind -T copy-mode-vi A          send -X end-of-line

run '~/.config/tmux/plugins/tpm/tpm'
# vim: filetype=conf
